{"version":3,"sources":["images/profile.jpg","components/Functions.js","components/Menu.js","components/Name.js","components/About.js","components/Projects.js","components/Contact.js","components/LastName.js","components/AboutPhoto.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","scrollTo","element","height","offsetTop","console","log","window","scroll","behavior","left","top","Menu","props","scrollToFunctionAbout","bind","scrollToFunctionProjects","scrollToFunctionContact","event","document","getElementById","className","onClick","this","React","Component","Name","lax","setup","addEventListener","x","update","scrollY","el","ReactDOM","findDOMNode","addElement","removeElement","data-lax-translate-x","data-lax-anchor","data-lax-opacity","About","id","Projects","Contact","LastName","profilePhoto","src","photo","App","AboutPhoto","render","Boolean","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2dfbec86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.aae8a2fd.jpg\";","\r\nexport function scrollTo(element) {\r\n\r\n    let height = element.offsetTop-50;\r\n    console.log(height);\r\n    window.scroll({\r\n      behavior: 'smooth',\r\n      left: 0,\r\n      top: height\r\n    });\r\n   \r\n  }","import React from 'react';\r\nimport '../allcss/Menu.css';\r\nimport { scrollTo } from './Functions';\r\n\r\nclass Menu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.scrollToFunctionAbout = this.scrollToFunctionAbout.bind(this);\r\n    this.scrollToFunctionProjects = this.scrollToFunctionProjects.bind(this);\r\n    this.scrollToFunctionContact = this.scrollToFunctionContact.bind(this);\r\n  }\r\n  scrollToFunctionAbout(event) {\r\n    scrollTo(document.getElementById(\"aboutSection\"))\r\n  }\r\n  scrollToFunctionProjects(event) {\r\n    scrollTo(document.getElementById(\"projectsSection\"))\r\n  }\r\n  scrollToFunctionContact(event) {\r\n    scrollTo(document.getElementById(\"contactSection\"))\r\n  }\r\n    render(){\r\n      return (\r\n        <div className=\"Menu\">\r\n            <button onClick={this.scrollToFunctionAbout}>About</button>\r\n            <button onClick={this.scrollToFunctionProjects}>Projects</button>\r\n            <button onClick={this.scrollToFunctionContact}>Contact</button>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n  export default Menu;","import React from 'react';\r\nimport '../allcss/Name.css';\r\nimport lax from 'lax.js';\r\nimport ReactDOM from 'react-dom';\r\nclass Name extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        lax.setup()\r\n  \r\n        document.addEventListener('scroll', function(x) {\r\n            lax.update(window.scrollY)\r\n        }, false)\r\n  \r\n        lax.update(window.scrollY)\r\n    }\r\n    componentDidMount() {\r\n        this.el = ReactDOM.findDOMNode(this)\r\n        lax.addElement(this.el)\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        lax.removeElement(this.el)\r\n      }\r\n    // React components are simple functions that take in props and state, and render HTML\r\n    render() {\r\n        return (\r\n            <div className='homeName' data-lax-translate-x=\"vh 1400, -elh -100\" data-lax-anchor=\"self\" data-lax-opacity=\"-131 0, -130 1, 608 1, 609 0\">\r\n                <p>Brenda</p>\r\n                \r\n            </div>\r\n       );\r\n    }\r\n  }\r\n  \r\n \r\n  export default Name;","import React from 'react';\r\nimport '../allcss/About.css';\r\n\r\nclass About extends React.Component {\r\n\r\n    render(){\r\n      return (\r\n        <div className=\"About\" id=\"aboutSection\">\r\n            <h1>about</h1>\r\n            <div className=\"intro\">\r\n            <p>I am a Front-end Developer with a degree in Human Resources. You might wonder, what's the relationship\r\n              between both? It may seem like nothing but I believe the best way to know a human being is through\r\n              a computer. This is why I enrolled in a bootcamp for 6 months with specialization in Front-end with Javascript \r\n              (mostly). Do you want to know more about me? \r\n            </p>\r\n            <p>I am an organized, empathic, friendly and creative woman who doesn't see a limit when learning. \r\n              Really, if I want learn it, I learn it. \r\n              I love concerts, cats, dogs, going to the cinema, traveling, listening to music, \r\n              reading a good book or talking with good friends, and especially fixing the bugs in my code.\r\n            </p>\r\n            <p>So, check my work!</p>\r\n            </div>\r\n            \r\n        </div>\r\n      )\r\n    }\r\n}\r\n  export default About;","import React from 'react';\r\nimport '../allcss/Projects.css';\r\n\r\nclass Projects extends React.Component {\r\n\r\n    render(){\r\n      return (\r\n        <div className=\"Projects\" id=\"projectsSection\">\r\n          <h1>projects</h1>\r\n          <div className='tableOfProjects'>\r\n                <div className=\"div\">Cipher Code</div>\r\n                <div className=\"div\">Data Lovers</div>\r\n                <div className=\"div\">Social Network</div>\r\n              \r\n                <div className=\"div\">Lab Notes</div>\r\n                <div className=\"div\">Movie Challenge</div>\r\n                <div className=\"div\">MD-links</div>\r\n                <div className=\"div\">Burger Queen</div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n  export default Projects;","import React from 'react';\r\nimport '../allcss/Contact.css';\r\n\r\nclass Contact extends React.Component {\r\n\r\n    render(){\r\n      return (\r\n        <div className=\"Contact\" id=\"contactSection\">\r\n            <h1>contact</h1>\r\n            <p>Hey! This is a test: Contact Component</p>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n  export default Contact;","import React from 'react';\r\nimport '../allcss/LastName.css';\r\nimport lax from 'lax.js';\r\nimport ReactDOM from 'react-dom';\r\nclass LastName extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        lax.setup()\r\n  \r\n        document.addEventListener('scroll', function(x) {\r\n            lax.update(window.scrollY)\r\n        }, false)\r\n  \r\n        lax.update(window.scrollY)\r\n    }\r\n    componentDidMount() {\r\n        this.el = ReactDOM.findDOMNode(this)\r\n        lax.addElement(this.el)\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        lax.removeElement(this.el)\r\n      }\r\n    render() {\r\n        return (\r\n            <div className='LastName' data-lax-translate-x=\"vh -20, -elh 1400\" data-lax-anchor=\"self\" data-lax-opacity=\"-131 0, -130 1, 608 1, 609 0\">\r\n               \r\n               \r\n                <p>Vielmas</p>  \r\n            </div>\r\n       );\r\n    }\r\n  }\r\n  \r\n \r\n  export default LastName;","import React from 'react';\r\nimport lax from 'lax.js';\r\nimport photo from '../images/profile.jpg';\r\nimport ReactDOM from 'react-dom';\r\nclass profilePhoto extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        lax.setup()\r\n  \r\n        document.addEventListener('scroll', function(x) {\r\n            lax.update(window.scrollY)\r\n        }, false)\r\n  \r\n        lax.update(window.scrollY)\r\n    }\r\n    componentDidMount() {\r\n        this.el = ReactDOM.findDOMNode(this)\r\n        lax.addElement(this.el)\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        lax.removeElement(this.el)\r\n      }\r\n    render() {\r\n        return (\r\n            <div className='profilePhoto' data-lax-translate-x=\"vh -100, -elh 100\" data-lax-anchor=\"self\" data-lax-opacity=\"-131 0, -130 1, 608 1, 609 0\">\r\n               \r\n                <img src={photo}/> \r\n            </div>\r\n       );\r\n    }\r\n  }\r\n  \r\n \r\n  export default profilePhoto;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../allcss/App.css';\r\nimport Menu from './Menu';\r\nimport Name from './Name';\r\nimport About from './About';\r\nimport Projects from './Projects';\r\nimport Contact from './Contact';\r\nimport LastName from './LastName';\r\nimport AboutPhoto from './AboutPhoto';\r\n\r\nclass App extends React.Component {\r\n  render(){\r\n    return (\r\n      <div>\r\n      <Menu/>\r\n      <Name/>\r\n      <LastName/>\r\n      <About/>\r\n      <AboutPhoto/>\r\n      <Projects/>\r\n      <Contact/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nReactDOM.render(<App />, document.getElementById('app'));\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './allcss/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('app'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}